environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      LLVM_VERSION: 12.0.1
      LLVM_VERSION_SHORT: 120
      VS_MAJOR_VERSION: 17
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      LLVM_VERSION: 11.0.1
      LLVM_VERSION_SHORT: 110
      VS_MAJOR_VERSION: 17

install:
  - appveyor DownloadFile https://github.com/terralang/llvm-build/releases/download/llvm-%LLVM_VERSION%/clang+llvm-%LLVM_VERSION%-x86_64-windows-msvc17.7z
  - 7z x clang+llvm-%LLVM_VERSION%-x86_64-windows-msvc%VS_MAJOR_VERSION%.7z
  - set CMAKE_PREFIX_PATH=%CD%\clang+llvm-%LLVM_VERSION%-x86_64-windows-msvc%VS_MAJOR_VERSION%

  - if /I "%USE_CUDA%" EQU "1" (appveyor DownloadFile https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers2/cuda_9.2.148_windows -FileName cuda.exe)
  - if /I "%USE_CUDA%" EQU "1" (.\cuda -s nvcc_9.2 cudart_9.2)
  - if /I "%USE_CUDA%" EQU "1" (set CUDA_DIR=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.2)

  - set TERRA_DIR=%CD%

build_script:
  - cd build
  - cmake .. -DCMAKE_INSTALL_PREFIX=%CD%\..\install -DCMAKE_GENERATOR_PLATFORM=x64
  - cmake --build . --target INSTALL --config Release
  - cd ..

  # Package for release
  - ps: |
        If($Env:LLVM_VERSION_SHORT -eq 120) {
          $Env:RELEASE_NAME = "terra-Windows-x86_64-$(git rev-parse --short HEAD)"
          Rename-Item install "$Env:RELEASE_NAME"
          7z a "$Env:RELEASE_NAME.zip" "$Env:RELEASE_NAME"
          Rename-Item "$Env:RELEASE_NAME" install
        }

test_script:
  - cd tests
  - ..\install\bin\terra run
  - cd ..

artifacts:
  - path: 'terra-*.zip'
    name: terra_release

deploy:
  description: '$(APPVEYOR_REPO_TAG_NAME)'
  provider: GitHub
  auth_token:
    secure: yN5vuhZjUW+MkntZ51StgL0qmgfjXbY8k6QlAyy/rxMV1YcRxmN2fO8KQxOefEhA
  artifact: terra_release
  force_update: true
  on:
    appveyor_repo_tag: true
