language: cpp
sudo: required
dist: trusty
os:
  - linux
  - osx
compiler:
  - gcc
  - clang
env:
  matrix:
  - LLVM_CONFIG=llvm-config-3.8 CLANG=clang-3.8 USE_CMAKE=1
  - LLVM_CONFIG=llvm-config-3.8 CLANG=clang-3.8 USE_CMAKE=0
  - LLVM_CONFIG=llvm-config-3.5 CLANG=clang-3.5 USE_CMAKE=0

matrix:
  exclude:
    - os: osx
      compiler: gcc
# blacklist some branches
branches:
  only:
    - develop
    - master
before_install:
  - |
    if [[ "$(uname)" = "Linux" ]]; then
      wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
      sudo apt-add-repository "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main" -y
      sudo apt-get update -qq
      sudo bash -c "echo 'Package: *' >> /etc/apt/preferences.d/llvm-600"
      sudo bash -c "echo 'Pin: origin apt.llvm.org' >> /etc/apt/preferences.d/llvm-600"
      sudo bash -c "echo 'Pin-Priority: 600' >> /etc/apt/preferences.d/llvm-600"
      cat /etc/apt/preferences.d/llvm-600
      apt-cache policy llvm-3.8-dev
      sudo apt-get install -qq clang-3.5 libclang-3.5-dev llvm-3.8-dev clang-3.8 libclang-3.8-dev llvm-3.8-dev libedit-dev
      ls /usr/share
      export CMAKE_PREFIX_PATH=/usr/share/llvm-3.8
    fi
  - |
    if [[ "$(uname)" = "Darwin" ]]; then
      curl -O http://releases.llvm.org/3.8.0/clang+llvm-3.8.0-x86_64-apple-darwin.tar.xz
      tar xf clang+llvm-3.8.0-x86_64-apple-darwin.tar.xz
      ln -s clang+llvm-3.8.0-x86_64-apple-darwin/bin/llvm-config llvm-config-3.8
      ln -s clang+llvm-3.8.0-x86_64-apple-darwin/bin/clang clang-3.8
      export CMAKE_PREFIX_PATH=$PWD/clang+llvm-3.8.0-x86_64-apple-darwin

      curl -O http://releases.llvm.org/3.5.2/clang+llvm-3.5.2-x86_64-apple-darwin.tar.xz
      tar xf clang+llvm-3.5.2-x86_64-apple-darwin.tar.xz
      ln -s clang+llvm-3.5.2-x86_64-apple-darwin/bin/llvm-config llvm-config-3.5
      ln -s clang+llvm-3.5.2-x86_64-apple-darwin/bin/clang clang-3.5
      export PATH=$PWD:$PATH
    fi
script:
  - |
    if [[ $USE_CMAKE -eq 1 ]]; then
      (cd build && cmake .. && make install)
      (cd tests && ./run)
    else
      make LLVM_CONFIG=$(which $LLVM_CONFIG) CLANG=$(which $CLANG) test
    fi
