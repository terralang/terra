#!../terra
local ffi = require("ffi")

local lscmd
if ffi.os == "Windows" then
    lscmd = "cmd /c dir /b /s"
else
    lscmd = "find . | cut -c 3-"
end

local function getcommand(file)
    local prefix = terralib and terralib.terrahome and 
                   terralib.terrahome .."/bin/terra" or "../terra"
    if ffi.os == "Windows" then
        prefix = "cmd /c " .. prefix:gsub("[/\\]","\\\\")
    end
    return prefix
end

local passed = {}
local failed = {}
local cwdlen
for line in io.popen(lscmd):lines() do
    if ffi.os == "Windows" then
        if not cwdlen then
            cwdlen = io.popen("cmd /c echo %cd%"):read():len()
        end
        line = line:sub(cwdlen+2)
        line = line:gsub("\\","/")
        io.close()
    end
    local file = line:match("^([^/]*%.t)$") or line:match("^(fails/[^/]*%.t)$")
    if file then
        print(file .. ":")
        local execstring = getcommand(file) .. " " .. file
        local result = os.execute(execstring)
        if type(result) == "number" and result == 0 or result == true then
            table.insert(passed,file)
        else
            --error("fail")
            table.insert(failed,file)
        end
    end
end


local function printtests(nm,lst)
    if #lst > 0 then
        print("=================")
        print("= "..nm)
        print("=================")
        for i,e in ipairs(lst) do
            print(e)
        end
        print("=================")
        print()
    end
end
printtests("passing tests",passed)
printtests("FAILING tests",failed)
print(tostring(#passed).." tests passed. "..tostring(#failed).." tests failed.")

if #failed > 0 then
    os.exit(1)
end
